import argparse
from deep_radiologist.data_loading import mat_to_csv
from pathlib import Path
import pandas as pd
import os


def main(args):
    info = pd.read_csv(args.data_source_specifier_path)
    n_rows = info.shape[0]

    # add new columns to the dataframe
    info['labels_corneas'] = ''
    info['labels_rhabdoms'] = ''

    for i in range(n_rows):
        img = info.loc[i, 'image_file_path']
        label = info.loc[i, 'mctv_label_file_path']

        out_label_dir = './dataset/raw_labels'

        # make directories if they don't exist
        Path(out_label_dir).mkdir(parents=True, exist_ok=True)

        if os.path.isdir(img):
            # swap x and y axes on dicom images
            swap_xy = True
        else:
            swap_xy = False

        new_path = f'{out_label_dir}/{Path(img).stem}_labels_corneas.csv'
        corneas = mat_to_csv(label, new_path, swap_xy, label_name='corneas')

        new_path = f'{out_label_dir}/{Path(img).stem}_labels_rhabdoms.csv'
        rhabdoms = mat_to_csv(label, new_path, swap_xy, label_name='rhabdoms')

        # now add new values to the csv file
        info.at[i, 'labels_corneas'] = corneas
        info.at[i, 'labels_rhabdoms'] = rhabdoms

    # Save updated dataframe to CSV
    info.to_csv(args.data_source_specifier_path, index=False)
    print('updated data source specifier')


if __name__ == '__main__':
    parser = argparse.ArgumentParser(
        description=(
            'Converts .mat files from the mctv program (an internal tool in Jan'
            "Hemmi's lab at UWA) to .csv."
        )
    )

    parser.add_argument(
        'data_source_specifier_path',
        type=str,
        help='''
        The path to your .csv file that specifies where your images and labels are and
        whether it should be used for training or testing.
        This .csv file should have the following columns:
        1. mctv_label_file_path (matlab files with corneas and rhabdoms generated by
        mctv)

        Example:
            data_source_specifiers/fiddler.csv
            or
            data_source_specifiers/paraphronima.csv
        '''
    )

    main(parser.parse_args())
